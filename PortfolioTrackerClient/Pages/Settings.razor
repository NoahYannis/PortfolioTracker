@page "/settings"
@using System.Collections.Generic
@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize]

@inject NavigationManager NavManager;
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider;

<h3>Settings</h3>

@if (editing)
{
    <div>
        <label for="Name">Name:</label>
        <input type="text" id="Name" @bind="User.UserName" />
    </div>
    <div>
        <label for="Email">Email:</label>
        <input type="email" id="Email" @bind="User.Email" />
    </div>
    <button class="btn btn-primary" @onclick="SaveProfile">Save</button>
}
else
{
    <div>
        <strong>Name:</strong> @User.UserName
    </div>
    <div>
        <strong>Email:</strong> @User.Email
    </div>
    <button class="btn btn-primary" @onclick="EditProfile">Edit</button>
}

@code {

    [Parameter]
    public User User { get; set; } = new();

    private bool editing = false;

    private bool isUserAuthenticated;

    private void EditProfile() => editing = true;

    protected override async Task OnInitializedAsync()
    {
        // Get the email of the currently authenticated user.
        AuthenticationState authState = await AuthStateProvider.GetAuthenticationStateAsync();
        string email = authState.User.Claims.ElementAt(2).Value;

        // Get the user from the database.
        var userServiceResponse = await AuthService.GetUserFromDb(email);

        // Set the current user to the user from the database.
        User = userServiceResponse.Data ?? new();
    }


    private void SaveProfile()
    {
        editing = false;
    }
}

