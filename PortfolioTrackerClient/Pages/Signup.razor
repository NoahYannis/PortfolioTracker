@page "/signup"

<h1>Sign Up</h1>

<EditForm Model="@UserToCreate" OnValidSubmit="async() => await SignUpUser(UserToCreate)">
    <DataAnnotationsValidator />

    <div class="input-group">
        <label for="username" class="input-label">Username:</label>
        <InputText type="text" id="username" name="username" class="input-field" @bind-Value="UserToCreate.UserName" />
    </div>
    <div class="input-group">
        <label for="email" class="input-label">Email:</label>
        <InputText type="email" id="email" name="email" class="input-field" @bind-Value="UserToCreate.Email" />
    </div>
    <div class="input-group">
        <label for="password" class="input-label">Password:</label>
        <input type="password" id="password" name="password" class="input-field" />
    </div>
    <div class="input-group">
        <label for="confirmPassword" class="input-label">Confirm Password:</label>
        <input type="password" id="confirmPassword" name="confirmPassword" class="input-field" />
    </div>
    <div style="margin-top: 20px;">
        <button type="submit" class="btn btn-primary">Sign Up</button>
        <button type="button" class="btn btn-secondary" style="margin-left: 10px;">Login</button>
    </div>
</EditForm>


@code {

    User UserToCreate { get; set; } = new();

    private async Task SignUpUser(User UserToBeCreated)
    {
        
    }
}
