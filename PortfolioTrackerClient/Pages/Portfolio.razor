@page "/portfolio"

@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Authorization;
@using PortfolioTrackerClient.Components
@using PortfolioTrackerClient.Services.AuthService;
@using PortfolioTrackerShared.Models.UserModels;

@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthProvider
@inject IPortfolioService PortfolioService
@attribute [Authorize]

<CascadingAuthenticationState>
    <AuthorizeView>
        <h3>Hi @context.User.Identity.Name. You're logged in with <i>@context.User.Claims.ElementAt(2).Value</i></h3>
    </AuthorizeView>
</CascadingAuthenticationState>


<h3>Portfolio</h3>

@* Ensure PortfolioOwner is initialized before rendering the pie chart *@
@if (PortfolioOwner.UserId != 0)
{
    <PortfolioPieChart PortfolioOwner="@PortfolioOwner" />
}

@code {

    private User PortfolioOwner { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthProvider.GetAuthenticationStateAsync();

        if (await AuthService.IsUserAuthenticated())
        {
            var userServiceResponse = await AuthService.GetUserFromDbByEmail(authState.User.Claims.ElementAt(2).Value);
            PortfolioOwner = userServiceResponse?.Data ?? new();
            await PortfolioService.InitializePortfolioAsync(PortfolioOwner.UserId);
        }
    }
}
