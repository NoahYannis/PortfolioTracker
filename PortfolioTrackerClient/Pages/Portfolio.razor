@page "/portfolio"

@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Authorization;
@using PortfolioTrackerClient.Components
@using PortfolioTrackerClient.Services.AuthService;
@using PortfolioTrackerShared.Models.UserModels;

@inject IAuthService AuthService
@inject IPortfolioService PortfolioService
@inject IStringLocalizer<Resource> Localizer
@attribute [Authorize]

@* Ensure PortfolioOwner is initialized before rendering the piechart *@
@if (PortfolioOwner.UserId != 0)
{
    <PortfolioPieChart PortfolioOwner="@PortfolioOwner" />
    <button class="btn-secondary" @onclick="OpenAddStockModal">@Localizer["AddNewStock"]</button>
}

@code {

    private User PortfolioOwner { get; set; } = new();

    // AddStock modal
    [CascadingParameter] IModalService Modal { get; set; } = default!;

    protected async override Task OnInitializedAsync()
    {
        PortfolioOwner = await AuthService.GetPortfolioOwner();
        await PortfolioService.InitializePortfolioAsync(PortfolioOwner.UserId);
    }

    private void OpenAddStockModal()
    {
        Modal.Show<AddStockComponent>(Localizer["AddNewStock"],
        new ModalParameters { { "PortfolioOwner", PortfolioOwner } });
    }
}
